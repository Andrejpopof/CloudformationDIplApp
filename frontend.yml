AWSTemplateFormatVersion: '2010-09-09'
Description: Frontend container for ECS Cluster

Resources:

  FrontendTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ExecutionRoleArn: !Sub 'arn:aws:iam::${AWS::AccountId}:role/ecsTaskExecutionRole'
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: frontend
          Image: 570360337377.dkr.ecr.us-west-2.amazonaws.com/frontend:final
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'frontend'
              awslogs-group: 'logsApp'

  Service:
    Type: AWS::ECS::Service
    DependsOn: FrontendListenerRule
    Properties:
      TaskDefinition: !Ref FrontendTaskDefinition
      Cluster: !ImportValue 'Cluster'
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !ImportValue 'PublicSubnet1'
            - !ImportValue 'PublicSubnet2'
          SecurityGroups:
            - !ImportValue ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: frontend
          ContainerPort: 3000
          TargetGroupArn: !Ref FrontendTargetGroup

  FrontendListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
          - Type: forward
            TargetGroupArn: !Ref FrontendTargetGroup
        Conditions:
          - Field: path-pattern
            Values:
              - '/'
        ListenerArn: !ImportValue  'Listener'
        Priority: 20
  
  FrontendTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: frontend-tg
      VpcId: !ImportValue 'VPC'
      Protocol: 'HTTP'
      Port: '80'
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 10
      TargetType: ip



  
Outputs:
  FrontendEndpoint:
    Description: Frontend endpoint
    Value: !Join ['',['http://', !ImportValue 'DomainName', '/']]
    Export:
      Name: 'FrontendEndpoint'

  FrontendTargetGroup:
    Description: Target group for the frontend
    Value: !Ref FrontendTargetGroup
    Export:
      Name: 'FrontendTargetGroup'
  
    